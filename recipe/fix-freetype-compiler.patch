diff --git a/setupext.py b/setupext.py
index 3e8b382cc..5e47af877 100644
--- a/setupext.py
+++ b/setupext.py
@@ -1,6 +1,6 @@
 import builtins
 import configparser
-from distutils import sysconfig, version
+from distutils import ccompiler, sysconfig, version
 from distutils.core import Extension
 from io import BytesIO
 import glob
@@ -760,31 +760,31 @@ class FreeType(SetupPackage):
             # compilation on windows
             shutil.rmtree(str(pathlib.Path(src_path, "objs")),
                           ignore_errors=True)
-            FREETYPE_BUILD_CMD = r"""
-call "%ProgramFiles%\Microsoft SDKs\Windows\v7.0\Bin\SetEnv.Cmd" ^
-    /Release /{xXX} /xp
-call "{vcvarsall}" {xXX}
-set MSBUILD=C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe
-%MSBUILD% "builds\windows\{vc20xx}\freetype.sln" ^
-    /t:Clean;Build /p:Configuration="Release";Platform={WinXX}
-"""
-            import distutils.msvc9compiler as msvc
-            # Note: freetype has no build profile for 2014, so we don't bother...
+            msbuild_platform = (
+                'x64' if platform.architecture()[0] == '64bit' else 'Win32')
+            base_path = pathlib.Path("build/freetype-2.6.1/builds/windows")
             vc = 'vc2010'
-            WinXX = 'x64' if platform.architecture()[0] == '64bit' else 'Win32'
-            xXX = 'x64' if platform.architecture()[0] == '64bit' else 'x86'
-            vcvarsall = msvc.find_vcvarsall(10.0)
-            if vcvarsall is None:
-                raise RuntimeError('Microsoft VS 2010 required')
-            cmdfile = pathlib.Path("build/build_freetype.cmd")
-            cmdfile.write_text(FREETYPE_BUILD_CMD.format(
-                vc20xx=vc, WinXX=WinXX, xXX=xXX, vcvarsall=vcvarsall))
-            subprocess.check_call([str(cmdfile.resolve())],
-                                  shell=True, cwd=src_path)
+            sln_path = (
+                base_path / vc / "freetype.sln"
+            )
+            (sln_path.parent / "Directory.Build.props").write_text("""
+ <Project>
+  <PropertyGroup>
+   <!-- The following line *cannot* be split over multiple lines. -->
+   <WindowsTargetPlatformVersion>$([Microsoft.Build.Utilities.ToolLocationHelper]::GetLatestSDKTargetPlatformVersion('Windows', '10.0'))</WindowsTargetPlatformVersion>
+  </PropertyGroup>
+ </Project>
+ """)
+            cc = ccompiler.new_compiler()
+            cc.initialize()
+            cc.spawn(["C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\devenv", str(sln_path), "/upgrade"])
+            cc.spawn(["C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\bin\\msbuild", str(sln_path),
+                       "/t:Clean;Build",
+                       f"/p:Configuration=Release;Platform={msbuild_platform}"])
             # Move to the corresponding Unix build path.
             pathlib.Path(src_path, "objs/.libs").mkdir()
             # Be robust against change of FreeType version.
-            lib_path, = (pathlib.Path(src_path, "objs", vc, xXX)
+            lib_path, = (pathlib.Path(src_path, "objs", vc, msbuild_platform)
                          .glob("freetype*.lib"))
             shutil.copy2(
                 str(lib_path),
